package com.leetcode.reorderlist;

class ListNode {
    int val;
    ListNode next;
    ListNode() {this.val = 0;}
    ListNode(int val) { this.val = val; }
    ListNode(int val, ListNode next) { this.val = val; this.next = next; }
    public void addArray(int[] arr) {
   	 if(arr.length < 1) return;
   	 this.val = arr[0];
   	 for(int i = 1; i < arr.length; i++) {
   		 this.add(arr[i]);    		 
   	 }
    }
    public void add(int value) {
   	 if(this.next == null) {
   		 this.next = new ListNode(value);
   	 }
   	 else
   	 {
	    	 ListNode head = this.next;
	    	 while(head.next != null) head = head.next;
	    	 head.next = new ListNode(value);
   	 }
    }
    
    @Override
    public String toString() {
    	return this.val + "->" + next;
    }
}



public class Soultion {
	
    static public void reorderList(ListNode head) {
        if(head == null) return;
        
        ListNode p = head, t = head;
        
        while(t.next != null) t = t.next;
        
        int value = t.val;
        
        while(p.next != null && p.next.val != value) {
        	t.next = p.next;
        	p.next = t;
        	p= p.next.next;
        	while(t.next.val != value) t = t.next;
        	t.next = null;
        	value = t.val;
        }
    }

	public static void main(String[] args) {
		ListNode node1 = new ListNode();
		
		node1.addArray(new int[] {1,2,3,4,5});
		
		reorderList(node1);
		
		int t = 0;
		t++;

	}

}
