package com.chris.slidingWindowMax;

import java.util.Arrays;
import java.util.Set;
import java.util.TreeSet;

public class SlidingWindowMax {
	static public int[] maxSlidingWindow(int[] nums, int k) {
        if(k == 1) return nums;
        
        Set<Integer> window = new TreeSet<>(); 
        
        for(int left = 0; left < nums.length - k; left++) {
        	int right = left + k - 1;
        	for(int i = left ; i <= right; i++) window.add(nums[i]);
        	System.out.println(window);
        	window.clear();
        }
        
		return null;
    }

	public static void main(String[] args) {
		
		long startTime = System.currentTimeMillis();
		System.out.println(Arrays.toString(maxSlidingWindow(new int[] {1,3,-1,-3,5,3,6,7}, 3)));
		System.out.println(Arrays.toString(maxSlidingWindow(new int[] {1}, 1)));
		long endTime = System.currentTimeMillis();
		
		System.out.println("Timer " + (endTime - startTime) + " milliseconds");

	}

}
